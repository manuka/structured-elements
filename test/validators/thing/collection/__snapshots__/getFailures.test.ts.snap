// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Invalid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Invalid), thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Invalid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing2": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Valid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Valid), thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: (Valid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: undefined, thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: undefined, thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Invalid), thing1: undefined, thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-0",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-0.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-0.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-0.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-0",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-0",
    "name": "Thing.Invalid Thing.id-0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-0.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-0.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-0.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-0",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-0",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-0": {
        "id": "Invalid Thing.id-0",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing1": undefined,
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Invalid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Invalid), thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Invalid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Valid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Valid), thing2: (Valid), },
  'Thing'
) 1`] = `[]`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: (Valid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: undefined, thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: undefined, thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: (Valid), thing1: undefined, thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-0": {
        "id": "Valid Thing.id-0",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing1": undefined,
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Invalid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Invalid), thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Invalid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-1",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-1.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-1.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-1.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-1",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-1",
    "name": "Thing.Invalid Thing.id-1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-1.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-1.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-1.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-1",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-1",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-1": {
        "id": "Invalid Thing.id-1",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Valid), thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Valid), thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: (Valid), thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-1": {
        "id": "Valid Thing.id-1",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
      "thing2": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: undefined, thing2: (Invalid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing1": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing1": undefined,
    },
  },
  {
    "element": {
      "id": "Invalid Thing.id-2",
      "name": "Invalid Thing.name",
      "parts": {},
      "type": "Invalid Thing.type",
      "weight": "Invalid Thing.weight",
    },
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": "Invalid Thing.type",
        "expectation": {
          "_StructuredElementReference": {
            "structure": "item",
            "target": [Function],
          },
        },
        "failures": [
          {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Thing.Invalid Thing.id-2.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
        ],
        "key": "type",
        "name": "Thing.Invalid Thing.id-2.type",
        "reason": [
          {
            "expectation": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "failure": {
              "element": "Invalid Thing.type",
              "expectation": [Function],
              "key": "(subject)",
              "name": "Thing.Invalid Thing.id-2.type",
              "reason": "(subject): functional expectation did not return true.",
              "subject": "Invalid Thing.type",
            },
            "path": "type",
            "reason": "(subject): functional expectation did not return true.",
            "value": "Invalid Thing.type",
          },
        ],
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight: expected typeof number, got string",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
      {
        "element": "Invalid Thing.weight",
        "expectation": [
          "number",
          null,
        ],
        "key": "weight",
        "name": "Thing.Invalid Thing.id-2.weight",
        "reason": "weight is not null",
        "subject": {
          "id": "Invalid Thing.id-2",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": "Invalid Thing.weight",
        },
      },
    ],
    "key": "Invalid Thing.id-2",
    "name": "Thing.Invalid Thing.id-2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.type",
          "expectation": [Function],
          "key": "(subject)",
          "name": "Thing.Invalid Thing.id-2.type",
          "reason": "(subject): functional expectation did not return true.",
          "subject": "Invalid Thing.type",
        },
        "path": "Invalid Thing.id-2.type",
        "reason": "(subject): functional expectation did not return true.",
        "value": "Invalid Thing.type",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight: expected typeof number, got string",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight: expected typeof number, got string",
        "value": "Invalid Thing.weight",
      },
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": "Invalid Thing.weight",
          "expectation": [
            "number",
            null,
          ],
          "key": "weight",
          "name": "Thing.Invalid Thing.id-2.weight",
          "reason": "weight is not null",
          "subject": {
            "id": "Invalid Thing.id-2",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": "Invalid Thing.weight",
          },
        },
        "path": "Invalid Thing.id-2",
        "reason": "weight is not null",
        "value": "Invalid Thing.weight",
      },
    ],
    "subject": {
      "Invalid Thing.id-2": {
        "id": "Invalid Thing.id-2",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": "Invalid Thing.weight",
      },
      "thing0": undefined,
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: undefined, thing2: (Valid), },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
      "thing1": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "Valid Thing.id-2": {
        "id": "Valid Thing.id-2",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      "thing0": undefined,
      "thing1": undefined,
    },
  },
]
`;

exports[`validator('Thing', 'collection').getFailures(
  { thing0: undefined, thing1: undefined, thing2: undefined, },
  'Thing'
) 1`] = `
[
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing0",
    "name": "Thing.thing0",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing0",
          "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing0",
        "reason": "Thing.thing0 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "thing0": undefined,
      "thing1": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing1",
    "name": "Thing.thing1",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing1",
          "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing1",
        "reason": "Thing.thing1 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "thing0": undefined,
      "thing1": undefined,
      "thing2": undefined,
    },
  },
  {
    "element": undefined,
    "expectation": {
      "id": "string",
      "name": "string",
      "parts": {
        "_StructuredElementReference": {
          "structure": "collection",
          "target": "Thing",
        },
      },
      "type": {
        "_StructuredElementReference": {
          "structure": "item",
          "target": [Function],
        },
      },
      "weight": [
        "number",
        null,
      ],
    },
    "failures": [
      {
        "element": undefined,
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "key": "(subject)",
        "name": "Thing.thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "subject": undefined,
      },
    ],
    "key": "thing2",
    "name": "Thing.thing2",
    "reason": [
      {
        "expectation": {
          "id": "string",
          "name": "string",
          "parts": {
            "_StructuredElementReference": {
              "structure": "collection",
              "target": "Thing",
            },
          },
          "type": {
            "_StructuredElementReference": {
              "structure": "item",
              "target": [Function],
            },
          },
          "weight": [
            "number",
            null,
          ],
        },
        "failure": {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Thing.thing2",
          "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
          "subject": undefined,
        },
        "path": "thing2",
        "reason": "Thing.thing2 expected to be a string-keyed record, but it isn't. It has typeof 'undefined'.",
        "value": undefined,
      },
    ],
    "subject": {
      "thing0": undefined,
      "thing1": undefined,
      "thing2": undefined,
    },
  },
]
`;
