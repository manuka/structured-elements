// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Invalid Thing)], name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.0.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.0.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.0.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "0",
          "name": "Person.inventory.0",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.0.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "0.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.0.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.0.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing), (Invalid Thing)], name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": [
        {
          "id": "Valid Thing.id",
          "name": "Valid Thing.name",
          "parts": {},
          "type": "gadget",
          "weight": 1,
        },
        {
          "id": "Valid Thing.id",
          "name": "Invalid Thing.name",
          "parts": {},
          "type": "Invalid Thing.type",
          "weight": 1,
        },
      ],
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "failures": [
            {
              "element": "Invalid Thing.type",
              "expectation": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "failures": [
                {
                  "element": "Invalid Thing.type",
                  "expectation": [Function],
                  "key": "(subject)",
                  "name": "Person.inventory.1.type",
                  "reason": "(subject): functional expectation did not return true.",
                  "subject": "Invalid Thing.type",
                },
              ],
              "key": "type",
              "name": "Person.inventory.1.type",
              "reason": [
                {
                  "expectation": {
                    "_StructuredElementReference": {
                      "structure": "item",
                      "target": [Function],
                    },
                  },
                  "failure": {
                    "element": "Invalid Thing.type",
                    "expectation": [Function],
                    "key": "(subject)",
                    "name": "Person.inventory.1.type",
                    "reason": "(subject): functional expectation did not return true.",
                    "subject": "Invalid Thing.type",
                  },
                  "path": "type",
                  "reason": "(subject): functional expectation did not return true.",
                  "value": "Invalid Thing.type",
                },
              ],
              "subject": {
                "id": "Valid Thing.id",
                "name": "Invalid Thing.name",
                "parts": {},
                "type": "Invalid Thing.type",
                "weight": 1,
              },
            },
          ],
          "key": "1",
          "name": "Person.inventory.1",
          "reason": [
            {
              "expectation": {
                "id": "string",
                "name": "string",
                "parts": {
                  "_StructuredElementReference": {
                    "structure": "collection",
                    "target": "Thing",
                  },
                },
                "type": {
                  "_StructuredElementReference": {
                    "structure": "item",
                    "target": [Function],
                  },
                },
                "weight": [
                  "number",
                  null,
                ],
              },
              "failure": {
                "element": "Invalid Thing.type",
                "expectation": [Function],
                "key": "(subject)",
                "name": "Person.inventory.1.type",
                "reason": "(subject): functional expectation did not return true.",
                "subject": "Invalid Thing.type",
              },
              "path": "1.type",
              "reason": "(subject): functional expectation did not return true.",
              "value": "Invalid Thing.type",
            },
          ],
          "subject": [
            {
              "id": "Valid Thing.id",
              "name": "Valid Thing.name",
              "parts": {},
              "type": "gadget",
              "weight": 1,
            },
            {
              "id": "Valid Thing.id",
              "name": "Invalid Thing.name",
              "parts": {},
              "type": "Invalid Thing.type",
              "weight": 1,
            },
          ],
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "Invalid Thing.type",
            "expectation": [Function],
            "key": "(subject)",
            "name": "Person.inventory.1.type",
            "reason": "(subject): functional expectation did not return true.",
            "subject": "Invalid Thing.type",
          },
          "path": "inventory.1.type",
          "reason": "(subject): functional expectation did not return true.",
          "value": "Invalid Thing.type",
        },
      ],
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
          {
            "id": "Valid Thing.id",
            "name": "Invalid Thing.name",
            "parts": {},
            "type": "Invalid Thing.type",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
      {
        "id": "Valid Thing.id",
        "name": "Invalid Thing.name",
        "parts": {},
        "type": "Invalid Thing.type",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [(Valid Thing)], name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [
          {
            "id": "Valid Thing.id",
            "name": "Valid Thing.name",
            "parts": {},
            "type": "gadget",
            "weight": 1,
          },
        ],
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [
      {
        "id": "Valid Thing.id",
        "name": "Valid Thing.name",
        "parts": {},
        "type": "gadget",
        "weight": 1,
      },
    ],
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: [], name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": [],
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": [],
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: array, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": [],
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": [],
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: date, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1970-01-01T00:00:00.000Z,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": 1970-01-01T00:00:00.000Z,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1970-01-01T00:00:00.000Z,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": 1970-01-01T00:00:00.000Z,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": 1970-01-01T00:00:00.000Z,
        },
      ],
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1970-01-01T00:00:00.000Z,
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1970-01-01T00:00:00.000Z,
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": null,
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": null,
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: null, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": null,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": null,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": null,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": null,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": null,
        },
      ],
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": null,
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": null,
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": 1,
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": 1,
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: number, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": 1,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "subject": 1,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": 1,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
            "subject": 1,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof number",
          "value": 1,
        },
      ],
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": 1,
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": 1,
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": {},
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": {},
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: object, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": {},
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "subject": {},
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": {},
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
            "subject": {},
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof object",
          "value": {},
        },
      ],
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": {},
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": {},
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": "string",
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": "string",
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: string, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": "string",
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": "string",
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "subject": "string",
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": "string",
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
            "subject": "string",
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof string",
          "value": "string",
        },
      ],
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": "string",
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": "string",
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: array, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": undefined,
      },
    },
    {
      "element": [],
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": [],
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": [],
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: date, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": 1970-01-01T00:00:00.000Z,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1970-01-01T00:00:00.000Z,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: null, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": undefined,
      },
    },
    {
      "element": null,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": null,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": null,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: number, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": undefined,
      },
    },
    {
      "element": 1,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got number",
      "subject": {
        "inventory": undefined,
        "name": 1,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": 1,
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: object, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": undefined,
      },
    },
    {
      "element": {},
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got object",
      "subject": {
        "inventory": undefined,
        "name": {},
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": {},
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: string, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": "string",
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": "string",
    "roleId": undefined,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: array, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": [],
      },
    },
    {
      "element": [],
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": [],
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": [],
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: date, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
    {
      "element": 1970-01-01T00:00:00.000Z,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1970-01-01T00:00:00.000Z,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": 1970-01-01T00:00:00.000Z,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: null, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": null,
      },
    },
    {
      "element": null,
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": null,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": null,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: number, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": 1,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": 1,
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: object, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got object",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": {},
      },
    },
    {
      "element": {},
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": {},
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": {},
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: string, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId: expected typeof number, got string",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": "string",
      },
    },
    {
      "element": "string",
      "expectation": [
        "number",
        undefined,
      ],
      "key": "roleId",
      "name": "Person.roleId",
      "reason": "roleId is not undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": "string",
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": "string",
  },
  "valid": false,
}
`;

exports[`validator('Person', 'item').validate(
  { inventory: undefined, name: undefined, roleId: undefined, },
  'Person'
) 1`] = `
{
  "failures": [
    {
      "element": undefined,
      "expectation": "string",
      "key": "id",
      "name": "Person.id",
      "reason": "id: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": {
        "_StructuredElementReference": {
          "structure": "array",
          "target": "Thing",
        },
      },
      "failures": [
        {
          "element": undefined,
          "expectation": {
            "id": "string",
            "name": "string",
            "parts": {
              "_StructuredElementReference": {
                "structure": "collection",
                "target": "Thing",
              },
            },
            "type": {
              "_StructuredElementReference": {
                "structure": "item",
                "target": [Function],
              },
            },
            "weight": [
              "number",
              null,
            ],
          },
          "key": "(subject)",
          "name": "Person.inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "subject": undefined,
        },
      ],
      "key": "inventory",
      "name": "Person.inventory",
      "reason": [
        {
          "expectation": {
            "_StructuredElementReference": {
              "structure": "array",
              "target": "Thing",
            },
          },
          "failure": {
            "element": undefined,
            "expectation": {
              "id": "string",
              "name": "string",
              "parts": {
                "_StructuredElementReference": {
                  "structure": "collection",
                  "target": "Thing",
                },
              },
              "type": {
                "_StructuredElementReference": {
                  "structure": "item",
                  "target": [Function],
                },
              },
              "weight": [
                "number",
                null,
              ],
            },
            "key": "(subject)",
            "name": "Person.inventory",
            "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
            "subject": undefined,
          },
          "path": "inventory",
          "reason": "Person.inventory expected to be an array, but isn't. It has typeof undefined",
          "value": undefined,
        },
      ],
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": undefined,
      },
    },
    {
      "element": undefined,
      "expectation": "string",
      "key": "name",
      "name": "Person.name",
      "reason": "name: expected typeof string, got undefined",
      "subject": {
        "inventory": undefined,
        "name": undefined,
        "roleId": undefined,
      },
    },
  ],
  "salvage": undefined,
  "subject": {
    "inventory": undefined,
    "name": undefined,
    "roleId": undefined,
  },
  "valid": false,
}
`;
